---
description:
globs:
alwaysApply: true
---
# React Component Architecture

- Prefeer arrow function Components over function declaration Components
- Component body have two parts: body and return.
  - Body only have logic;
  - Return returns JSX;
  - JSX do not contain logic like intertions. refer to Nameing Conventions rule 5.1. for details.
- Place types for Component props in the end of the page, like shown in the Template / Examples
- Prefer React Server Components (RSC) where possible
- Minimize 'use client' directives
- Implement proper error boundaries
- Use Suspense for async operations

# Templates / Examples

Use examples below to generate relevant code.

## React Component Structure

```typescript
import { headers } from 'next/headers';
import cx from 'clsx';
import { type User } from '@prisma/client';

import { Nav } from '@/cpmponents/Nav';

import { prisma, type } from '@/lib/prisma';

export const UserTable: React.FC<UserTableProps> = async (props) => {
    const userList = await prisma.users.getAll({ where: { role: props.role } });

    const userListJSX = transform(userList).map(user => <li key={user.id}>{user.name}</li>);

    return <section>{ userListJSX }</section>;

};

/* Helpers */
const transform = (userList: User[]) => /* transformation logic */

/* Types */
interface UserTableProps {
    role: 'admin' | 'user';
}
```
