{
  "$schema": "./node_modules/@biomejs/biome/configuration_schema.json",
  "linter": {
    "domains": {
      "project": "recommended"
    },
    "enabled": true,
    "rules": {
      /* rules focused on preventing accessibility problems */
      "a11y": {
        "useButtonType": "warn" // ultracite rule
      },

      /* rules that focus on inspecting complex code that could be simplified. */
      "complexity": {
        "noExcessiveCognitiveComplexity": "off", // when code do smell, clean up the spell.
        /* React */
        "noUselessFragments": "error"
      },

      /* rules that detect code that is guaranteed to be incorrect or useless. */
      "correctness": {
        "noUnusedVariables": {
          "level": "warn",
          "fix": "none" // do not let biome fix unused variables by prefixing with _ â€” review and handle these manually
        },
        "noUndeclaredDependencies": "error",

        /* React */
        "noRenderReturnValue": "error",
        "useHookAtTopLevel": "error",
        "useExhaustiveDependencies": {
          /* handle useEffect manually */
          "fix": "none",
          "level": "warn"
        },
        "useJsxKeyInIterable": {
          "level": "error",
          "options": { "checkShorthandFragments": true }
        },
        "noChildrenProp": "warn",
        "noVoidElementsWithChildren": "error"
      },

      /* rules under development */
      "nursery": {
        /**
         * TODO 1. turn on when dubious imports are removed e.g. preact instead of react
         * TODO 2. delegate to ts
         */
        "noUnresolvedImports": "off",
        "useUniqueElementIds": "off",
        "noFloatingPromises": "off",
        "noConstantBinaryExpression": "warn",
        "useIndexOf": "warn",

        "noUnknownAtRule": "off", // ultracite rule

        /* React */
        "noReactPropAssign": "error",
        "noNestedComponentDefinitions": "error"
      },

      /* rules catching ways your code could be written to run faster, or generally be more efficient. */
      "performance": {
        "noNamespaceImport": "off", // ultracite rule
        "noAccumulatingSpread": "off"
      },

      /* rules that detect ways your code could be exploited or lead to security vulnerabilities. */
      "security": {
        /* React */
        "noBlankTarget": "error",
        "noDangerouslySetInnerHtml": "info",
        "noDangerouslySetInnerHtmlWithChildren": "on"
      },

      /* rules enforcing a consistent and idiomatic way of writing your code. By default, these rules will only generate warnings instead of errors. */
      "style": {
        "noDefaultExport": "error",
        "noParameterAssign": "warn",
        "useConst": "warn",
        "useDefaultParameterLast": "warn",
        "noSubstr": "warn",

        /* TODO enable in future refactoring */
        "useAtIndex": "off",
        "noYodaExpression": "off", // logical fix expressions
        "useCollapsedIf": "off", // nested ifs fix
        "useExportType": "off", // for future adding TS,
        "useImportType": "off", // for future adding TS,

        "useFilenamingConvention": "off", // move to kebab-case later
        "useBlockStatements": "off", // ultracite rule

        /* React */
        "useComponentExportOnlyModules": "off", // TODO enable after HOC extermination
        "noImplicitBoolean": "off",
        "useConsistentCurlyBraces": "on",
        "useFragmentSyntax": "on"
      },

      /* rules that detect code that is likely to be incorrect or useless. */
      "suspicious": {
        "noDebugger": "error",
        "noAssignInExpressions": "warn", // todo change to error
        "noDoubleEquals": "warn", // unsafe fix
        "noFallthroughSwitchClause": "warn",
        "noPrototypeBuiltins": "warn",
        "useNumberToFixedDigitsArgument": "warn",
        "noExplicitAny": "off",

        "noConsole": {
          "level": "warn",
          "options": {
            "allow": ["assert", "error", "info", "warn"]
          }
        },

        /* React */
        "noArrayIndexKey": "warn",
        "noDuplicateJsxProps": "warn",
        "noSuspiciousSemicolonInJsx": "warn",
        "noCommentText": "on"
      }
    }
  }
}
